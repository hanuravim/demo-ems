{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 8,
            "metadata": {
                "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
            }
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "DNS domain name for existing Active Directory domain"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Name of the Administrator of the existing Active Directory Domain"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password for the Administrator account of the existing Active Directory Domain"
            }
        },
        "svcUsername": {
            "type": "string",
            "metadata": {
                "description": "Name of the Service Account in the existing Active Directory Domain"
            }
        },
        "svcPassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password for the Service Account in the existing Active Directory Domain"
            }
        },
        "clusterIP": {
            "type": "string",
            "metadata": {
                "description": "IP Address of the cluster"
            }
        },
        "nicSubnetUri": {
            "type": "string",
            "metadata": {
                "description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of the VMs to be created"
            }
        },
        "vmCount": {
            "type": "int",
            "minValue": 2,
            "maxValue": 3,
            "metadata": {
                "description": "Number of VMs to be created in cluster (Min=2, Max=3)"
            }
        },
        "vmDiskSize": {
            "type": "int",
            "minValue": 128,
            "maxValue": 1023,
            "metadata": {
                "description": "Size of each data disk in GB on each VM (Min=128, Max=1023)"
            }
        },
        "vmDiskCount": {
            "type": "int",
            "minValue": 1,
            "maxValue": 32,
            "metadata": {
                "description": "Number of data disks on each VM (Min=1, Max=32). Ensure that the VM size you've selected will support this number of data disks."
            }
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftSQLServer"
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "SQL2016SP1-WS2016"
        },
        "imageSKU": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "imageVersion": {
            "type": "string",
            "defaultValue": "latest"
        },
        "_artifactsLocation": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersionStorage": "2016-01-01",
        "witnessStorageName": "[concat(parameters('namePrefix'),uniqueString(resourceGroup().id),'cw')]",
        "witnessStorageType": "Standard_LRS",
        "vmNamePrefix": "[concat(parameters('namePrefix'),'-fci-')]",
        "vmAvailabilitySetName": "[concat(variables('vmNamePrefix'),'as')]",
        "clusterName": "[concat(variables('vmNamePrefix'),'c')]",
        "sqlClusterName": "[concat(variables('vmNamePrefix'),'sql')]",
        "vmLoopTemplateURL": "[concat(parameters('_artifactsLocation'),'/nestedTemplates/newVM.json')]",
        "sfciPrepModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/prep-sfci.ps1.zip')]",
        "sfciPrepFunction": "PrepSFCI.ps1\\PrepSFCI",
        "sfciConfigModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/config-sfci.ps1.zip')]",
        "sfciConfigFunction": "ConfigSFCI.ps1\\ConfigSFCI"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('witnessStorageName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('witnessStorageType')]"
            },
            "kind": "Storage",
            "comments": "The storage account used for the SQL Cloud Witness"
        },
        {
            "name": "[concat(variables('vmNamePrefix'), copyindex(), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-10-01",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('vmCount')]"
            },
            "dependsOn": [],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('nicSubnetUri')]"
                            }
                        }
                    }
                ]
            },
            "comments": "The NICs for the SQL cluster nodes"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('vmCount')]"
            },
            "name": "[concat(variables('vmNamePrefix'),copyindex(),'-newVM')]",
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmLoopTemplateURL')]"
                },
                "parameters": {
                    "vmName": {
                        "value": "[concat(variables('vmNamePrefix'), copyindex())]"
                    },
                    "vmAvailabilitySetName": {
                        "value": "[variables('vmAvailabilitySetName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vmDiskCount": {
                        "value": "[parameters('vmDiskCount')]"
                    },
                    "vmDiskSize": {
                        "value": "[parameters('vmDiskSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "imagePublisher": {
                        "value": "[parameters('imagePublisher')]"
                    },
                    "imageOffer": {
                        "value": "[parameters('imageOffer')]"
                    },
                    "imageSKU": {
                        "value": "[parameters('imageSKU')]"
                    },
                    "imageVersion": {
                        "value": "[parameters('imageVersion')]"
                    }
                }
            },
            "comments": "This loop deploys the cluster nodes via a nested template"
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmNamePrefix'),copyindex(1),'/sfciPrep')]",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "virtualMachineLoop"
            ],
            "copy": {
                "name": "virtualMachineExtensionLoop",
                "count": "[sub(parameters('vmCount'),1)]"
            },
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.20",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('sfciPrepModulesURL')]",
                    "configurationFunction": "[variables('sfciPrepFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        },
                        "svcCreds": {
                            "userName": "[parameters('svcUserName')]",
                            "password": "PrivateSettingsRef:svcPassword"
                        }
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "svcPassword": "[parameters('svcPassword')]"
                    }
                }
            },
            "comments": "This VM DSC extension prepares the second cluster node"
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmNamePrefix'),'0/sfciConfig')]",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "virtualMachineLoop",
                "virtualMachineExtensionLoop",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('witnessStorageName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.20",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('sfciConfigModulesURL')]",
                    "configurationFunction": "[variables('sfciConfigFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "clusterName": "[variables('clusterName')]",
                        "sqlClusterName": "[variables('sqlClusterName')]",
                        "clusterIP": "[parameters('clusterIP')]",
                        "vmNamePrefix": "[variables('vmNamePrefix')]",
                        "vmCount": "[parameters('vmCount')]",
                        "vmDiskSize": "[parameters('vmDiskSize')]",
                        "witnessStorageName": "[variables('witnessStorageName')]",
                        "witnessStorageKey": {
                            "userName": "PLACEHOLDER-DO-NOT-USE",
                            "password": "PrivateSettingsRef:witnessStorageKey"
                        },
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        },
                        "svcCreds": {
                            "userName": "[parameters('svcUserName')]",
                            "password": "PrivateSettingsRef:svcPassword"
                        }
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "svcPassword": "[parameters('svcPassword')]",
                        "witnessStorageKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('witnessStorageName')),variables('apiVersionStorage')).keys[0].value]"
                    }
                }
            },
            "comments": "This VM DSC extension prepares the first cluster node and creates the cluster itself"
        }
    ]
}
