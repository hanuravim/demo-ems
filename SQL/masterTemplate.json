{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 8,
            "metadata": {
                "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of the VMs to be created.  Select a SKU which supports SSD."
            },
            "defaultValue": "Standard_B2s"
        },
        "vmDiskSize": {
            "type": "int",
            "minValue": 128,
            "maxValue": 1023,
            "metadata": {
                "description": "Size of each data disk in GB on each VM (Min=128, Max=1023)."
            },
            "defaultValue": 1023
        },
        "vmDiskCount": {
            "type": "int",
            "minValue": 1,
            "maxValue": 32,
            "metadata": {
                "description": "Number of data disks on eachSFCI VM (Min=1, Max=32). Ensure that the VM size you've selected will support this number of data disks."
            },
            "defaultValue": 1
        },
        "existingDomainName": {
            "type": "string",
            "metadata": {
                "description": "DNS domain name for existing Active Directory domain."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Name of an Administrator account in the Active Directory Domain."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password for the Administrator account."
            }
        },
        "svcUsername": {
            "type": "string",
            "metadata": {
                "description": "Name of the SQL Service Account.  Must already exist in the domain."
            }
        },
        "svcPassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password for the SQL Service Account."
            }
        },
        "existingVirtualNetworkRGName": {
            "type": "string",
            "metadata": {
                "description": "Name of a resource group which contains a pre-existing vNet to connect the SQL Cluster to."
            }
        },
        "existingVirtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of a pre-existing vNet to connect the SQL Cluster to."
            }
        },
        "virtualNetworkAddressRange": {
            "type": "string"
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of a pre-existing subnet to connect the SQL Cluster to."
            }
        },
        "subnetRange": {
            "type": "string",
            "metadata": {
                "description": "Address prefix of a pre-existing subnet to connect the SQL Cluster to."
            }
        },
        "dnsServerPrivateIp": {
            "type": "string",
            "metadata": {
                "description": "DNS server IP for the SQL Cluster to connect."
            }
        },
        "clusterIP": {
            "type": "string",
            "metadata": {
                "description": "A free IP Address on the selected subnet for the SQL Cluster & load balancer."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
            },
            "defaultValue": "https://raw.githubusercontent.com/hanuravim/demo-ems/master/SQL"
        }
    },
    "variables": {
        "subnetRef": "[resourceId(parameters('existingVirtualNetworkRGName'),'Microsoft.Network/virtualNetworks/subnets',parameters('existingVirtualNetworkName'),parameters('existingSubnetName'))]",
        "deploySFCIClusterTemplateURL": "[concat(parameters('_artifactsLocation'),'/nestedTemplates/deploy-cluster.json')]",
        "deploySFCICluster": "deploySFCICluster",
        "vmCount": 2
    },
    "resources": [
        {
            "name": "[variables('deploySFCICluster')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('deploySFCIClusterTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "domainName": {
                        "value": "[parameters('existingDomainName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "svcUsername": {
                        "value": "[parameters('svcUsername')]"
                    },
                    "svcPassword": {
                        "value": "[parameters('svcPassword')]"
                    },
                    "existingVirtualNetworkName": {
                        "value": "[parameters('existingVirtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('VirtualNetworkAddressRange')]"
                    },
                    "existingSubnetName": {
                        "value": "[parameters('existingSubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[parameters('subnetRange')]"
                    },
                    "dnsServerPrivateIp": {
                        "value": "[parameters('dnsServerPrivateIp')]"
                    },
                    "nicSubnetUri": {
                        "value": "[variables('subnetRef')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vmCount": {
                        "value": "[variables('vmCount')]"
                    },
                    "vmDiskSize": {
                        "value": "[parameters('vmDiskSize')]"
                    },
                    "vmDiskCount": {
                        "value": "[parameters('vmDiskCount')]"
                    },
                    "clusterIP": {
                        "value": "[parameters('clusterIP')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    }
                }
            },
            "comments": "Deploys the SQL failover cluster via a nested template"
        }
    ]
}
