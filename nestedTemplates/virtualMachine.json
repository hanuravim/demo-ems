{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmRole": {
          "type": "string"
        },
        "objectId": {
            "type": "string"
        },
        "virtualMachineAdminUserName": {
            "type": "string"
        },
        "numberofVMs":{
            "type": "int"
        },
        "virtualNetworkRG":{
            "type": "string"
        },
        "virtualNetworkName":{
            "type": "string"
        },
        "SubnetName":{
            "type": "string"
        },
        "PrivateIP":{
            "type": "array"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "Password-Or-ssh": {
            "type": "securestring"
        },
        "vmtag":{
            "type": "object"
        },
        "baseUrl":{
            "type": "string"
        }
    },
    "variables": {
        "keyVaultName":"[concat('keyvault', uniqueString(resourceGroup().id))]",
        "keyVaultResourceID": "[resourceId(resourceGroup().name, 'Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "secretName": "Password-Or-ssh",
        "secretValue":"[parameters('Password-Or-ssh')]",
        "platform":"Windows",
        "windowsOffer": "WindowsServer",
        "windowsSku": "2012-R2-Datacenter",
        "windowsPublisher": "MicrosoftWindowsServer",
        "provisionVMAgent":true,
        "linuxPublisher": "RedHat",
        "linuxOffer": "RHEL",
        "linuxSku": "7.2",
        "vmNicName": "[concat(parameters('vmRole'), '-nic')]",
        "networkSecurityGroupName":"[concat(parameters('vmRole'), '-nsg')]",
        "diagnosticStorageAccountName": "[concat('diagst', uniqueString(resourceGroup().id))]",
        "vnetId": "[resourceId(parameters('virtualNetworkRG'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "SubnetRef":{
            "geaviationsubnetref": "[concat(variables('vnetId'),'/subnets/',parameters('SubnetName'))]"
        },
        "configuration":{
            "keyvaultURL":"[concat(parameters('baseUrl'),'ge-aviation/nestedTemplates/keyvault.json')]",
            "resourcelocksURL":"[concat(parameters('baseUrl'),'ge-aviation/nestedTemplates/resourcelocks.json')]"
        },
        "workspaceName":"[concat('oms', uniqueString(resourceGroup().id))]"
    },    
    "resources":[
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[variables('workspaceName')]",
            "apiVersion": "2015-11-01-preview",
            "location": "eastus",
            "properties": {
                "sku": {
                    "name": "PerNode"
                },
                "features": {
                    "searchVersion": 1
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "2015-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
              "displayName": "KeyVault"
            },
            "properties": {
              "enabledForDeployment": true,
              "enabledForTemplateDeployment": true,
              "enabledForDiskEncryption": true,
              "tenantId": "[subscription().tenantId]",
              "accessPolicies": [
                {
                  "tenantId": "[subscription().tenantId]",
                  "objectId": "[parameters('objectId')]",
                  "permissions": {
                    "keys": ["all" ],
                    "secrets": [ "all" ]
                  }
                }
              ],
              "sku": {
                "name": "standard",
                "family": "A"
              }
            },
            "resources": [
              {
                "type": "secrets",
                "name": "[variables('secretName')]",
                "apiVersion": "2015-06-01",
                "tags": { "displayName": "secret" },
                "properties": {
                  "value": "[parameters('Password-Or-ssh')]"
                },
                "dependsOn": [
                  "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
                ]
              }
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmRole'), copyindex(1), '-nic')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberofVMs')]"
            },
            "properties": {
              "ipConfigurations": [
                {
                  "name": "ipconfig1",
                  "properties": {
                    "subnet": {
                      "id": "[variables('SubnetRef').geaviationsubnetref]"
                    },
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[parameters('PrivateIP')[copyIndex()]]"
                   }
                }
              ],
              "networkSecurityGroup":{
                  "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              },
              "dnsSettings": {
                "dnsServers": []
              },
              "enableIPForwarding": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ]
        },
        {
            "name": "[variables('diagnosticStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-01-01",
            "sku": {
              "name": "Standard_GRS"
            },
            "dependsOn": [],
            "tags": {
              "displayName": "diagnosticStorageAccount"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-03-01",
            "properties": {
              "securityRules": [
                {
                  "name": "SSH",
                  "properties": {
                    "description": "Allows SSH traffic",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "22",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Deny",
                    "priority": 100,
                    "direction": "Inbound"
                  }
                }
              ]
             }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmRole'), copyIndex(1))]",
            "location": "[resourceGroup().location]",
            "tags": {
                "[parameters('vmtag').key1]": "[parameters('vmtag').value1]"
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberofVMs')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
                "nicLoop",
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[if(equals(variables('platform'), 'Windows'), variables('windowsPublisher'), variables('linuxPublisher'))]",
                        "offer": "[if(equals(variables('platform'), 'Windows'), variables('windowsOffer'), variables('linuxOffer'))]",
                        "version": "latest",
                        "sku": "[if(equals(variables('platform'), 'Windows'), variables('windowsSku'), variables('linuxSku'))]"
                    },
                "osDisk": {
                    "name": "[concat(parameters('vmRole'), copyIndex(1),'-OSDisk')]",
                    "createOption": "FromImage",
                    "managedDisk": {
                    "storageAccountType": "Premium_LRS"
                    },
                "caching": "ReadWrite"
                },
                "dataDisks": [
                    {
                      "createOption": "Empty",
                      "lun": 0,
                      "diskSizeGB": 1,
                      "caching": "None"
                    }
                ]
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmRole'), copyIndex(1),'-OSDisk')]",
                    "adminUsername": "[parameters('virtualMachineAdminUserName')]",
                    "adminPassword": "[parameters('Password-Or-ssh')]",
                    "windowsConfiguration": {
                        "provisionVMAgent":true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                    {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmRole'), copyindex(1),'-nic'))]"
                    }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "Microsoft.EnterpriseCloud.Monitoring",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('vmRole'), copyIndex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                        "workspaceId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', variables('workspaceName')), '2015-03-20').customerId]"
                    },
                    "protectedSettings": {
                    "workspaceKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', variables('workspaceName')), '2015-03-20').primarySharedKey]"
                    }
                    }
            },
            {
                "type": "extensions",
                "name": "Microsoft.Azure.Security",
                "location": "[resourcegroup().location]",
                "apiVersion": "2017-03-30",
                "properties": {
                  "publisher": "Microsoft.Azure.Security",
                  "type": "AzureDiskEncryption",
                  "typeHandlerVersion": "2.2",
                  "autoUpgradeMinorVersion": true,
                  "forceUpdateTag": "1.0",
                  "settings": {
                    "EncryptionOperation": "EnableEncryption",
                    "KeyVaultURL": "[reference(variables('keyVaultResourceId'),'2016-10-01').vaultUri]",
                    "KeyVaultResourceId": "[variables('keyVaultResourceID')]",
                    "KekVaultResourceId": "[variables('keyVaultResourceID')]",
                    "KeyEncryptionAlgorithm": "RSA-OAEP",
                    "VolumeType": "All",
                    "ResizeOSDisk": false
                  }
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('vmRole'), copyIndex(1)))]"
                ]
            }
            ]
        }
       
            
    ],
    "outputs": {}
}    
