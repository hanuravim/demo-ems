{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the Administrator of the new VM and Domain"
            },
            "defaultValue": "adAdministrator"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the Administrator account of the new VM and Domain"
            }
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the AD Domain created "
            }
        },
        "virtualNetworkRG": {
            "type": "string",
            "metadata": {
                "description": "Name of virtual network resource group"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "hypervasrvnet",
            "metadata": {
                "description": "Name of virtual network"
            }
        },
        "virtualNetworkAddressRange": {
            "defaultValue": "192.10.0.0/21",
            "type": "string",
            "metadata": {
                "description": "The address range of the new VNET in CIDR format"
            }
        },
        "adSubnetPrefix": {
            "defaultValue": "192.10.2.0/24",
            "type": "string",
            "metadata": {
                "description": "The address range of the new VNET in CIDR format"
            }
        },
        "adPDCVMName": {
            "defaultValue": "adPDC",
            "type": "string",
            "metadata": {
                "description": "The name of the new Primary AD VM"
            }
        },
        "adPDCNICIPAddress": {
            "defaultValue": "192.10.2.10",
            "type": "string",
            "metadata": {
                "description": "The IP address of the new AD VM"
            }
        },
        "adBDCVMName": {
            "defaultValue": "adBDC",
            "type": "string",
            "metadata": {
                "description": "The name of the new Primary AD VM"
            }
        },
        "adBDCNICIPAddress": {
            "defaultValue": "192.10.2.11",
            "type": "string",
            "metadata": {
                "description": "The IP address of the new AD VM"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            },
            "defaultValue": "https://raw.githubusercontent.com/hanuravim/demo-ems/master"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "storageAccountType": "Premium_LRS",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2016-Datacenter",
        "adLBFE": "LBFE",
        "adLBBE": "LBBE",
        "nicTemplateUri": "[concat(parameters('_artifactsLocation'),'/nestedTemplates/nic.json', parameters('_artifactsLocationSasToken'))]",
        "configureADBDCTemplateUri": "[concat(parameters('_artifactsLocation'),'/nestedTemplates/configureADBDC.json', parameters('_artifactsLocationSasToken'))]",
        "adPDCModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/CreateADPDC.zip', parameters('_artifactsLocationSasToken'))]",
        "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
        "adBDCPreparationModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/PrepareADBDC.zip', parameters('_artifactsLocationSasToken'))]",
        "adBDCPreparationFunction": "PrepareADBDC.ps1\\PrepareADBDC",
        "adBDCConfigurationModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/ConfigureADBDC.zip', parameters('_artifactsLocationSasToken'))]",
        "adBDCConfigurationFunction": "ConfigureADBDC.ps1\\ConfigureADBDC",
        "vnetId": "[resourceId(parameters('virtualNetworkRG'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "adVMSettings": {
            "adVMSize": "Standard_DS2_v2",
            "adPDCNicName": "adPDCNic",
            "adBDCNicName": "adBDCNic",
            "adDataDiskSize": 1000
        },
        "availabilitySets": {
            "adAvailabilitySetName": "adAvailabilitySet"
        },
        "loadbalancers": {
            "adloadBalancerName": "adilb",
            "adloadBalancerFEIP": "192.10.2.5"
        },
        "subnetNames": {
            "adSubnetName": "ad"
        },
        "ids": {
            "adsubnetId": "[concat(variables('vnetId'),'/subnets/', variables('subnetNames').adSubnetName)]",
            "adPDCNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adVMSettings').adPDCNicName)]",
            "adBDCNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adVMSettings').adBDCNicName)]",
            "adAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySets').adAvailabilitySetName)]",
            "adlbID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadbalancers').adloadBalancerName)]"
        }
    },
    "resources": [
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[resourcegroup().location]",
            "name": "[variables('availabilitySets').adAvailabilitySetName]",
            "properties": {
                "PlatformUpdateDomainCount": 20,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('loadbalancers').adloadBalancerName]",
            "location": "[resourcegroup().location]",
            "dependsOn": [],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[variables('ids').adsubnetId]"
                            },
                            "privateIPAddress": "[variables('loadbalancers').adloadBalancerFEIP]",
                            "privateIPAllocationMethod": "Static"
                        },
                        "name": "LoadBalancerFrontend"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackendPool1"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancers').adloadBalancerName), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancers').adloadBalancerName), '/backendAddressPools/BackendPool1')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancers').adloadBalancerName), '/probes/lbprobe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "lbrule"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "name": "[variables('adVMSettings').adPDCNicName]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-10-01",
            "location": "[resourcegroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/',variables('loadbalancers').adloadBalancerName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('adPDCNicIPAddress')]",
                            "subnet": {
                                "id": "[variables('ids').adsubnetId]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('ids').adlbID, '/backendAddressPools/BackendPool1')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('adVMSettings').adBDCNicName]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-10-01",
            "location": "[resourcegroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/',variables('loadbalancers').adloadBalancerName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('adBDCNicIPAddress')]",
                            "subnet": {
                                "id": "[variables('ids').adsubnetId]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('ids').adlbID, '/backendAddressPools/BackendPool1')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('adPDCVMName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourcegroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces',variables('adVMSettings').adPDCNicName)]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySets').adAvailabilitySetName)]",
                "[resourceId('Microsoft.Network/loadBalancers',variables('loadbalancers').adloadBalancerName)]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('adVMSettings').adVMSize]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySets').adAvailabilitySetName)]"
                },
                "osProfile": {
                    "computerName": "[parameters('adPDCVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('adPDCVMName'),'_OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('storageAccountType')]"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('adPDCVMName'),'_data-disk1')]",
                            "caching": "None",
                            "diskSizeGB": "[variables('adVMSettings').adDataDiskSize]",
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "[variables('storageAccountType')]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adVMSettings').adPDCNicName)]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "CreateADForest",
                    "type": "extensions",
                    "apiVersion": "2017-03-30",
                    "location": "[resourcegroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('adPDCVMName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[variables('adPDCModulesURL')]",
                            "ConfigurationFunction": "[variables('adPDCConfigurationFunction')]",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "name": "UpdateBDCNIC",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('adVMSettings').adBDCNicName)]"
                
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[variables('adVMSettings').adBDCNicName]"
                    },
                    "ipConfigurations": {
                        "value": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Static",
                                    "privateIPAddress": "[parameters('adBDCNicIPAddress')]",
                                    "subnet": {
                                        "id": "[variables('ids').adsubnetId]"
                                    },
                                    "loadBalancerBackendAddressPools": [
                                        {
                                            "id": "[concat(variables('ids').adlbID, '/backendAddressPools/BackendPool1')]"
                                        }
                                    ]
                                    
                                }
                            }
                        ]
                    },
                    "dnsServers": {
                        "value": [
                            "[parameters('adPDCNicIPAddress')]"
                        ]
                    }
                }
            }
        },
        {
            "name": "[parameters('adBDCVMName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourcegroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces',variables('adVMSettings').adBDCNicName)]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySets').adAvailabilitySetName)]",
                "[resourceId('Microsoft.Network/loadBalancers',variables('loadbalancers').adloadBalancerName)]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('adVMSettings').adVMSize]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySets').adAvailabilitySetName)]"
                },
                "osProfile": {
                    "computerName": "[parameters('adBDCVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('adBDCVMName'),'_osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('storageAccountType')]"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('adBDCVMName'),'_data-disk1')]",
                            "caching": "None",
                            "diskSizeGB": "[variables('adVMSettings').adDataDiskSize]",
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "[variables('storageAccountType')]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adVMSettings').adBDCNicName)]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('adBDCVMName'),'/PrepareBDC')]",
            "apiVersion": "2016-03-30",
            "location": "[resourcegroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('adBDCVMName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.19",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "ModulesUrl": "[variables('adBDCPreparationModulesURL')]",
                    "ConfigurationFunction": "[variables('adBDCPreparationFunction')]",
                    "Properties": {
                        "DNSServer": "[parameters('adPDCNicIPAddress')]"
                    }
                }
            }
        },
        {
            "name": "ConfiguringBackupADDomainController",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',parameters('adBDCVMName'),'/extensions/PrepareBDC')]",
                "Microsoft.Resources/deployments/UpdateBDCNIC"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configureADBDCTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adBDCVMName": {
                        "value": "[parameters('adBDCVMName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "adBDCConfigurationFunction": {
                        "value": "[variables('adBDCConfigurationFunction')]"
                    },
                    "adBDCConfigurationModulesURL": {
                        "value": "[variables('adBDCConfigurationModulesURL')]"
                    }
                }
            }
        }
       
    ],
    "outputs": {}
}
